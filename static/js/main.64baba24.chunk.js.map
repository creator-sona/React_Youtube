{"version":3,"sources":["components/video_detail/video_detail.module.css","components/video_list/video_list.module.css","components/video_item/video_item.module.css","components/search_header/search_header.module.css","components/search_header/search_header.jsx","components/video_detail/video_detail.jsx","components/video_item/video_item.jsx","components/video_list/video_list.jsx","app.jsx","service/youtube.js","index.js","app.module.css"],"names":["module","exports","SearchHeader","memo","onSearch","schIptRef","useRef","handleSearch","value","current","className","Style","header","logo","src","alt","ref","schIpt","type","placeholder","onKeyPress","event","key","schBtn","onClick","VideoDetail","video","detailArea","width","height","id","frameBorder","allowFullScreen","title","snippet","channelTitle","description","VideoItem","onSelectVideo","styleType","display","list","grid","inner","thumbnails","medium","url","thumbnail","videoTit","channelTit","VideoList","videos","map","App","youtube","useState","setVideos","selectedVideo","setSelectedVideo","useEffect","mostPopular","then","search","useCallback","query","content","videoDetail","videoList","Youtube","httpClient","this","client","a","get","params","part","chart","maxResults","response","data","items","q","item","videoId","axios","create","baseURL","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64baba24.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailArea\":\"video_detail_detailArea__2sqjs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videos\":\"video_list_videos__1VCw_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"video\":\"video_item_video__37dg9\",\"list\":\"video_item_list__2jYRY\",\"grid\":\"video_item_grid__2iJDD\",\"inner\":\"video_item_inner__27d7e\",\"thumbnail\":\"video_item_thumbnail__1w2AL\",\"videoTit\":\"video_item_videoTit__DMJLK\",\"channelTit\":\"video_item_channelTit__2_KHy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"search_header_header__3zkT2\",\"logo\":\"search_header_logo__tK0eh\",\"schIpt\":\"search_header_schIpt__AZPaI\"};","import React, { useRef, memo } from 'react';\nimport Style from './search_header.module.css'\n\nconst SearchHeader = memo(\n    ({ onSearch }) => {\n        const schIptRef = useRef();\n    \n        const handleSearch = () => {\n            const value = schIptRef.current.value;\n            onSearch(value);\n        }\n    \n        const onKeyPress = event => {\n            if (event.key === 'Enter') {\n                handleSearch();\n            }\n        }\n    \n        const onClick = event => {\n            handleSearch();\n        }\n    \n        return(\n            <header className={Style.header}>\n                <img className={Style.logo} src=\"./img/logo_youtube.png\" alt=\"logo\"/>\n                <input ref={schIptRef} className={Style.schIpt} type=\"search\" placeholder=\"Search...\" onKeyPress={onKeyPress}/>\n                <button className={Style.schBtn} onClick={onClick}>GO</button>\n            </header>\n        )\n    }\n);\n\nexport default SearchHeader;","import React from \"react\";\nimport Style from \"./video_detail.module.css\";\n\nconst VideoDetail = ({ video }) => {\n  return (\n    <section className={Style.detailArea}>\n      <iframe\n        type=\"text/html\"\n        width=\"100%\"\n        height=\"500px\"\n        src={`https://www.youtube.com/embed/${video.id}`}\n        frameBorder=\"0\"\n        allowFullScreen\n        title=\"youtube video player\"\n      ></iframe>\n      <h2>{video.snippet.title}</h2>\n      <h3>{video.snippet.channelTitle}</h3>\n      <p>{video.snippet.description}</p>\n    </section>\n  );\n};\n\nexport default VideoDetail;\n","import React, { memo } from \"react\";\nimport Style from \"./video_item.module.css\";\n\nconst VideoItem = memo( // memo를 사용하면 props가 업데이트가 되지 않았을때, 불필요한 렌더링을 하지 않도록 해줌\n  ({ video, onSelectVideo, display }) => {\n  // 인자를 (props)라고 쓰면 아래 태그에서 값을 사용하기위해 props.video.snippet~ 이 반복된다\n  // ({video : {snippet}}) 이런식으로 작성하면\n  // props안에있는 video의 반복되는 snippet까지 변수로 선언한것 처럼 줄여서 사용할 수 있다.\n  \n  const styleType = display === \"list\" ? Style.list : Style.grid;\n  return (\n    <li className={`${Style.video} ${styleType}`}>\n      <div className={Style.inner} onClick={() => onSelectVideo(video)}>\n        <img\n          src={video.snippet.thumbnails.medium.url}\n          className={Style.thumbnail}\n          alt=\"video thumbnail\"\n        />\n        <div>\n          <p className={Style.videoTit}>{video.snippet.title}</p>\n          <p className={Style.channelTit}>{video.snippet.channelTitle}</p>\n        </div>\n      </div>\n    </li>\n  );\n});\n\nexport default VideoItem;\n","import React from \"react\";\nimport VideoItem from \"../video_item/video_item\";\nimport Style from \"./video_list.module.css\";\n\nconst VideoList = ({ videos, onSelectVideo, display }) => (\n  <ul className={Style.videos}>\n    {videos.map((video) => (\n      <VideoItem\n        key={video.id}\n        video={video}\n        onSelectVideo={onSelectVideo}\n        display={display}\n      />\n    ))}\n  </ul>\n);\n\nexport default VideoList;\n","import { useState, useEffect, useCallback } from \"react\";\nimport Style from \"./app.module.css\";\nimport SearchHeader from \"./components/search_header/search_header\";\nimport VideoDetail from \"./components/video_detail/video_detail\";\nimport VideoList from \"./components/video_list/video_list\";\n\nfunction App({ youtube }) {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  useEffect(() => {\n    youtube.mostPopular().then((videos) => setVideos(videos));\n  }, [youtube]); // []빈 배열을 인자를 넘길경우 처음 한번만 실행된다.\n\n  const search = useCallback((query) => {\n    youtube.search(query).then((videos) => {\n      setSelectedVideo(null);\n      setVideos(videos);\n    });\n  }, [youtube]);\n  // useCallback은 최초에 한번 메모리에 저장되는데\n  // 한번 만들면 계속 메모리에 저장하고 있기 때문에 필요한 경우에만 사용해야된다.\n\n  const selectVideo = (video) => {\n    setSelectedVideo(video);\n  };\n\n  return (\n    <>\n      <SearchHeader onSearch={search} />\n      <section className={Style.content}>\n        {selectedVideo && (\n          <div className={Style.videoDetail}>\n            <VideoDetail video={selectedVideo} />\n          </div>\n        )}\n        <div className={Style.videoList}>\n          <VideoList\n            videos={videos}\n            onSelectVideo={selectVideo}\n            display={selectedVideo ? \"list\" : \"gird\"}\n          />\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","// import axios from 'axios';\n\nclass Youtube {\n    constructor(httpClient){\n        // 2. axios 라이브러리를 사용하면서도 index.js에서 선언해서 보내줄때..!\n        this.client = httpClient;\n\n        // 1. axios 라이브러리를 사용하였을때..!\n        // this.client = axios.create({\n        //     baseURL : \"https://youtube.googleapis.com/v3\",\n        //     params : {key: key},\n        // });\n        // axios 라이브러리를 사용하면 중복되는 baseURL과 key를 미리 정의해놓고 재사용가능하며\n        // 알아서 json으로 변환해주고, 오래된 브라우저에서도 호환가능하다.\n\n        // 0. fetch로 작업했을때 간단하게..!\n        // this.key = key;\n        // this.requestOptions = {\n        //     method: 'GET',\n        //     redirect: 'follow'\n        // };\n    }\n\n    async mostPopular() {\n        const response = await this.client.get(\"videos\", {\n            params : {\n                part: 'snippet',\n                chart: 'mostPopular',\n                maxResults: 20\n            }\n        });\n        return response.data.items;\n    }\n\n    async search(query) {\n        const response = await this.client.get(\"search\", {\n            params : {\n                part: 'snippet',\n                maxResults: 20,\n                q: query,\n                type: 'video'\n            }\n        });\n        return response.data.items.map(item => ({ ...item, id: item.id.videoId }))\n    }\n}\n\nexport default Youtube;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport Youtube from './service/youtube';\nimport axios from 'axios';\n\nconst httpClient = axios.create({\n    baseURL : \"https://youtube.googleapis.com/v3\",\n    params : {key: process.env.REACT_APP_YOUTUBE_API_KEY},\n});\nconst youtube = new Youtube(httpClient);\nReactDOM.render(\n  <React.StrictMode>\n    <App youtube={youtube}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"app_content__ckDFI\",\"videoDetail\":\"app_videoDetail__2-lsy\",\"videoList\":\"app_videoList__23TJ6\"};"],"sourceRoot":""}